diff --git a/apps/vilinskyy/index.html b/apps/vilinskyy/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..84af80be33bbe836b1edbae618ac06730d112ba4
--- /dev/null
+++ b/apps/vilinskyy/index.html
@@ -0,0 +1,12 @@
+<!DOCTYPE html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <title>Vilinskyy Portfolio</title>
+  </head>
+  <body>
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+</html>
diff --git a/apps/vilinskyy/package.json b/apps/vilinskyy/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..ccdef10b29cb0c64f8b0ab5c163df3e544399995
--- /dev/null
+++ b/apps/vilinskyy/package.json
@@ -0,0 +1,14 @@
+{
+  "name": "vilinskyy",
+  "version": "1.0.0",
+  "type": "module",
+  "private": true,
+  "scripts": {
+    "dev": "vite",
+    "build": "vite build",
+    "preview": "vite preview",
+    "test": "playwright test",
+    "lint": "eslint src",
+    "typecheck": "tsc --noEmit"
+  }
+}
diff --git a/apps/vilinskyy/public/placeholder1.png b/apps/vilinskyy/public/placeholder1.png
new file mode 100644
index 0000000000000000000000000000000000000000..cb43b5ce1342e5d73830ac8b6a37ea870fae2632
GIT binary patch
literal 10
KcmZQzfB^si3IG8B

literal 0
HcmV?d00001

diff --git a/apps/vilinskyy/public/placeholder2.png b/apps/vilinskyy/public/placeholder2.png
new file mode 100644
index 0000000000000000000000000000000000000000..cb43b5ce1342e5d73830ac8b6a37ea870fae2632
GIT binary patch
literal 10
KcmZQzfB^si3IG8B

literal 0
HcmV?d00001

diff --git a/apps/vilinskyy/public/placeholder3.png b/apps/vilinskyy/public/placeholder3.png
new file mode 100644
index 0000000000000000000000000000000000000000..cb43b5ce1342e5d73830ac8b6a37ea870fae2632
GIT binary patch
literal 10
KcmZQzfB^si3IG8B

literal 0
HcmV?d00001

diff --git a/apps/vilinskyy/src/App.tsx b/apps/vilinskyy/src/App.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..6c476e7ca4a8ee25ff14bfce3a6c201d1be0705d
--- /dev/null
+++ b/apps/vilinskyy/src/App.tsx
@@ -0,0 +1,74 @@
+import { useEffect, useState } from 'react'
+import Home from './pages/Home'
+import Visuals from './pages/Visuals'
+import Networking from './pages/Networking'
+import LoomRoast from './pages/LoomRoast'
+
+const routes: Record<string, () => JSX.Element> = {
+  '/': Home,
+  '/visuals': Visuals,
+  '/networking-2024': Networking,
+  '/loom-roast': LoomRoast,
+}
+
+// Minimal router using history API. React Router not used to keep dependencies small.
+export default function App() {
+  const [path, setPath] = useState(window.location.pathname)
+
+  useEffect(() => {
+    const onPop = () => setPath(window.location.pathname)
+    window.addEventListener('popstate', onPop)
+    return () => window.removeEventListener('popstate', onPop)
+  }, [])
+
+  const navigate = (to: string) => {
+    window.history.pushState({}, '', to)
+    setPath(to)
+  }
+
+  const Component = routes[path] || Home
+
+  return (
+    <div>
+      <nav>
+        <a
+          href="#"
+          onClick={(e) => {
+            e.preventDefault()
+            navigate('/')
+          }}
+        >
+          Home
+        </a>
+        <a
+          href="#"
+          onClick={(e) => {
+            e.preventDefault()
+            navigate('/visuals')
+          }}
+        >
+          Visuals
+        </a>
+        <a
+          href="#"
+          onClick={(e) => {
+            e.preventDefault()
+            navigate('/networking-2024')
+          }}
+        >
+          Networking 2024
+        </a>
+        <a
+          href="#"
+          onClick={(e) => {
+            e.preventDefault()
+            navigate('/loom-roast')
+          }}
+        >
+          Loom Roast
+        </a>
+      </nav>
+      <Component />
+    </div>
+  )
+}
diff --git a/apps/vilinskyy/src/components/DetailedProjectListings.tsx b/apps/vilinskyy/src/components/DetailedProjectListings.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..1f329c0f69b8faa81bbe0702a35c49ef813a6542
--- /dev/null
+++ b/apps/vilinskyy/src/components/DetailedProjectListings.tsx
@@ -0,0 +1,30 @@
+import ExpandableProjectSection from './ExpandableProjectSection'
+
+const projects = [
+  {
+    id: '1',
+    summary: { title: 'Decipad', shortDescription: 'Data storytelling app.' },
+    detail: {
+      longDescription: 'Detailed description of Decipad project.',
+      images: ['/placeholder1.png'],
+    },
+  },
+  {
+    id: '2',
+    summary: { title: 'Grammarly', shortDescription: 'Writing assistant.' },
+    detail: {
+      longDescription: 'Long details about Grammarly work.',
+      images: ['/placeholder2.png'],
+    },
+  },
+]
+
+export default function DetailedProjectListings() {
+  return (
+    <section>
+      {projects.map((p) => (
+        <ExpandableProjectSection key={p.id} project={p} />
+      ))}
+    </section>
+  )
+}
diff --git a/apps/vilinskyy/src/components/ExpandableProjectSection.module.css b/apps/vilinskyy/src/components/ExpandableProjectSection.module.css
new file mode 100644
index 0000000000000000000000000000000000000000..43163c83642338198bc0829e34e703c8fd13b962
--- /dev/null
+++ b/apps/vilinskyy/src/components/ExpandableProjectSection.module.css
@@ -0,0 +1,10 @@
+.expandableSection {
+  border: 1px solid #ddd;
+  padding: 1rem;
+  margin-bottom: 1rem;
+  border-radius: 4px;
+}
+
+.detailContainer {
+  overflow: hidden;
+}
diff --git a/apps/vilinskyy/src/components/ExpandableProjectSection.tsx b/apps/vilinskyy/src/components/ExpandableProjectSection.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..704edc69d1c5e1b5baa81286cdb3491792875fea
--- /dev/null
+++ b/apps/vilinskyy/src/components/ExpandableProjectSection.tsx
@@ -0,0 +1,65 @@
+import { useState, useRef } from 'react'
+import { motion, AnimatePresence } from 'framer-motion'
+import ProjectSummary from './ProjectSummary'
+import ProjectDetail from './ProjectDetail'
+import styles from './ExpandableProjectSection.module.css'
+
+interface Project {
+  id: string
+  summary: {
+    title: string
+    shortDescription: string
+  }
+  detail: {
+    longDescription: string
+    images: string[]
+  }
+}
+
+export default function ExpandableProjectSection({
+  project,
+}: {
+  project: Project
+}) {
+  const [isExpanded, setIsExpanded] = useState(false)
+  const contentRef = useRef<HTMLDivElement>(null)
+
+  const toggleExpand = () => setIsExpanded((v) => !v)
+
+  return (
+    <div className={styles.expandableSection}>
+      <ProjectSummary
+        title={project.summary.title}
+        shortDescription={project.summary.shortDescription}
+        isExpanded={isExpanded}
+        onToggle={toggleExpand}
+        ariaControls={`project-detail-${project.id}`}
+      />
+      <AnimatePresence initial={false}>
+        {isExpanded && (
+          <motion.section
+            key="content"
+            initial="collapsed"
+            animate="open"
+            exit="collapsed"
+            variants={{
+              open: { opacity: 1, height: 'auto' },
+              collapsed: { opacity: 0, height: 0 },
+            }}
+            transition={{ duration: 0.4 }}
+            id={`project-detail-${project.id}`}
+            aria-hidden={!isExpanded}
+            ref={contentRef}
+            data-testid="project-detail"
+            className={styles.detailContainer}
+          >
+            <ProjectDetail
+              longDescription={project.detail.longDescription}
+              images={project.detail.images}
+            />
+          </motion.section>
+        )}
+      </AnimatePresence>
+    </div>
+  )
+}
diff --git a/apps/vilinskyy/src/components/HeroSectionVideoIntro.module.css b/apps/vilinskyy/src/components/HeroSectionVideoIntro.module.css
new file mode 100644
index 0000000000000000000000000000000000000000..40dc33ab7303b8290ac39204dbee768433d3dc1a
--- /dev/null
+++ b/apps/vilinskyy/src/components/HeroSectionVideoIntro.module.css
@@ -0,0 +1,25 @@
+.hero {
+  text-align: center;
+  padding: 2rem 1rem;
+}
+
+.videoWrapper {
+  position: relative;
+  padding-bottom: 56.25%;
+  height: 0;
+  overflow: hidden;
+}
+
+.videoWrapper iframe {
+  position: absolute;
+  top: 0;
+  left: 0;
+  width: 100%;
+  height: 100%;
+  border: 0;
+}
+
+.title {
+  margin-top: 1rem;
+  font-size: 2rem;
+}
diff --git a/apps/vilinskyy/src/components/HeroSectionVideoIntro.tsx b/apps/vilinskyy/src/components/HeroSectionVideoIntro.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..02f637c6a13b780f4db5b2209ab394beec1b083b
--- /dev/null
+++ b/apps/vilinskyy/src/components/HeroSectionVideoIntro.tsx
@@ -0,0 +1,18 @@
+import styles from './HeroSectionVideoIntro.module.css'
+
+export default function HeroSectionVideoIntro() {
+  // Using YouTube embed for quick video intro
+  return (
+    <section className={styles.hero}>
+      <div className={styles.videoWrapper}>
+        <iframe
+          src="https://www.youtube.com/embed/dQw4w9WgXcQ?rel=0"
+          title="Intro Video"
+          allow="autoplay; encrypted-media"
+          allowFullScreen
+        ></iframe>
+      </div>
+      <h1 className={styles.title}>Welcome to Vilinskyy Portfolio</h1>
+    </section>
+  )
+}
diff --git a/apps/vilinskyy/src/components/LoomRoastPage.tsx b/apps/vilinskyy/src/components/LoomRoastPage.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..c27f6d82cd3b05f66bc506fde5dda7bfc099d74b
--- /dev/null
+++ b/apps/vilinskyy/src/components/LoomRoastPage.tsx
@@ -0,0 +1,31 @@
+import { useState } from 'react'
+
+export default function LoomRoastPage() {
+  const [url, setUrl] = useState('')
+  const [message, setMessage] = useState('')
+
+  const handleSubmit = (e: React.FormEvent) => {
+    e.preventDefault()
+    if (url) {
+      setMessage('Submitted! We will review your project.')
+      setUrl('')
+    }
+  }
+
+  return (
+    <section>
+      <h2>Loom Roast</h2>
+      <p>Submit your project link for a detailed review.</p>
+      <form onSubmit={handleSubmit}>
+        <input
+          value={url}
+          onChange={(e) => setUrl(e.target.value)}
+          placeholder="Project URL"
+          required
+        />
+        <button type="submit">Submit</button>
+      </form>
+      {message && <p role="status">{message}</p>}
+    </section>
+  )
+}
diff --git a/apps/vilinskyy/src/components/MultiColumnLayout.module.css b/apps/vilinskyy/src/components/MultiColumnLayout.module.css
new file mode 100644
index 0000000000000000000000000000000000000000..6dfe6268bd3fec2bc11f01d55ae68a8aaed779c5
--- /dev/null
+++ b/apps/vilinskyy/src/components/MultiColumnLayout.module.css
@@ -0,0 +1,11 @@
+.multiColumn {
+  column-count: 2;
+  column-gap: 2rem;
+  padding: 1rem;
+}
+
+@media (max-width: 600px) {
+  .multiColumn {
+    column-count: 1;
+  }
+}
diff --git a/apps/vilinskyy/src/components/MultiColumnLayout.tsx b/apps/vilinskyy/src/components/MultiColumnLayout.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..84dbb0a61d25af4ff2d980ba4761f05c591501d8
--- /dev/null
+++ b/apps/vilinskyy/src/components/MultiColumnLayout.tsx
@@ -0,0 +1,9 @@
+import styles from './MultiColumnLayout.module.css'
+
+export default function MultiColumnLayout({ text }: { text: string }) {
+  return (
+    <div data-testid="multi-column" className={styles.multiColumn}>
+      {text}
+    </div>
+  )
+}
diff --git a/apps/vilinskyy/src/components/NetworkingCoursePage.tsx b/apps/vilinskyy/src/components/NetworkingCoursePage.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..f6488871b03da94dc844b4963f9f03d3f17b7776
--- /dev/null
+++ b/apps/vilinskyy/src/components/NetworkingCoursePage.tsx
@@ -0,0 +1,10 @@
+export default function NetworkingCoursePage() {
+  return (
+    <section>
+      <h2>Networking 2024 Course</h2>
+      <p>Learn how to build connections effectively.</p>
+      <p>Price: $199</p>
+      <button onClick={() => alert('Redirect to payment')}>Enroll Now</button>
+    </section>
+  )
+}
diff --git a/apps/vilinskyy/src/components/NewsletterForm.module.css b/apps/vilinskyy/src/components/NewsletterForm.module.css
new file mode 100644
index 0000000000000000000000000000000000000000..bed4b6d337ba0c304ae05b024b1b4d44906bc81a
--- /dev/null
+++ b/apps/vilinskyy/src/components/NewsletterForm.module.css
@@ -0,0 +1,16 @@
+.form {
+  display: flex;
+  flex-direction: column;
+  gap: 0.5rem;
+  max-width: 300px;
+  margin: 2rem auto;
+}
+
+input {
+  padding: 0.5rem;
+  font-size: 1rem;
+}
+
+button {
+  padding: 0.5rem;
+}
diff --git a/apps/vilinskyy/src/components/NewsletterForm.tsx b/apps/vilinskyy/src/components/NewsletterForm.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..19a2449c99c8acb46dbef67757045ec8f52ce47c
--- /dev/null
+++ b/apps/vilinskyy/src/components/NewsletterForm.tsx
@@ -0,0 +1,34 @@
+import { useState } from 'react'
+import styles from './NewsletterForm.module.css'
+
+export default function NewsletterForm() {
+  const [email, setEmail] = useState('')
+  const [message, setMessage] = useState('')
+
+  const handleSubmit = (e: React.FormEvent) => {
+    e.preventDefault()
+    // Simulate async submission
+    if (/^[^@\s]+@[^@\s]+\.[^@\s]+$/.test(email)) {
+      setMessage('Thank you for subscribing!')
+      setEmail('')
+    } else {
+      setMessage('Please enter a valid email.')
+    }
+  }
+
+  return (
+    <form className={styles.form} onSubmit={handleSubmit}>
+      <label>
+        Email
+        <input
+          type="email"
+          value={email}
+          onChange={(e) => setEmail(e.target.value)}
+          required
+        />
+      </label>
+      <button type="submit">Subscribe</button>
+      {message && <p role="status">{message}</p>}
+    </form>
+  )
+}
diff --git a/apps/vilinskyy/src/components/ProjectDetail.module.css b/apps/vilinskyy/src/components/ProjectDetail.module.css
new file mode 100644
index 0000000000000000000000000000000000000000..a56286009c53d35bd4e72dee0c19177e4b3d258c
--- /dev/null
+++ b/apps/vilinskyy/src/components/ProjectDetail.module.css
@@ -0,0 +1,15 @@
+.detailContent {
+  padding-top: 1rem;
+  border-top: 1px solid #eee;
+}
+
+.detailImages {
+  display: flex;
+  gap: 0.5rem;
+  margin-top: 1rem;
+}
+
+.detailImage {
+  max-width: 100px;
+  height: auto;
+}
diff --git a/apps/vilinskyy/src/components/ProjectDetail.tsx b/apps/vilinskyy/src/components/ProjectDetail.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..6643ac3695b98c0257f77cbfaff7170ded260875
--- /dev/null
+++ b/apps/vilinskyy/src/components/ProjectDetail.tsx
@@ -0,0 +1,27 @@
+import styles from './ProjectDetail.module.css'
+
+export default function ProjectDetail({
+  longDescription,
+  images,
+}: {
+  longDescription: string
+  images: string[]
+}) {
+  return (
+    <div className={styles.detailContent}>
+      <p>{longDescription}</p>
+      {images?.length > 0 && (
+        <div className={styles.detailImages}>
+          {images.map((src, i) => (
+            <img
+              key={i}
+              src={src}
+              alt={`detail ${i}`}
+              className={styles.detailImage}
+            />
+          ))}
+        </div>
+      )}
+    </div>
+  )
+}
diff --git a/apps/vilinskyy/src/components/ProjectSummary.module.css b/apps/vilinskyy/src/components/ProjectSummary.module.css
new file mode 100644
index 0000000000000000000000000000000000000000..696137a1c37eae76e6d331b81a22c0f8b7c9ab2d
--- /dev/null
+++ b/apps/vilinskyy/src/components/ProjectSummary.module.css
@@ -0,0 +1,18 @@
+.summaryContainer {
+  display: flex;
+  flex-direction: column;
+}
+
+.summaryTitle {
+  font-size: 1.25rem;
+  margin: 0 0 0.5rem;
+}
+
+.summaryDescription {
+  margin-bottom: 0.5rem;
+}
+
+.readMoreButton {
+  align-self: start;
+  padding: 0.5rem 1rem;
+}
diff --git a/apps/vilinskyy/src/components/ProjectSummary.tsx b/apps/vilinskyy/src/components/ProjectSummary.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..7157ccf6f1e65b2bb36259ec5ee13f7438b98ca4
--- /dev/null
+++ b/apps/vilinskyy/src/components/ProjectSummary.tsx
@@ -0,0 +1,36 @@
+import { motion } from 'framer-motion'
+import styles from './ProjectSummary.module.css'
+
+interface Props {
+  title: string
+  shortDescription: string
+  isExpanded: boolean
+  onToggle: () => void
+  ariaControls: string
+}
+
+export default function ProjectSummary({
+  title,
+  shortDescription,
+  isExpanded,
+  onToggle,
+  ariaControls,
+}: Props) {
+  return (
+    <div className={styles.summaryContainer}>
+      <h3 className={styles.summaryTitle}>{title}</h3>
+      <p className={styles.summaryDescription}>{shortDescription}</p>
+      <motion.button
+        onClick={onToggle}
+        aria-expanded={isExpanded}
+        aria-controls={ariaControls}
+        data-testid="read-more"
+        className={styles.readMoreButton}
+        whileHover={{ scale: 1.05 }}
+        whileTap={{ scale: 0.95 }}
+      >
+        {isExpanded ? 'Read Less' : 'Read More'}
+      </motion.button>
+    </div>
+  )
+}
diff --git a/apps/vilinskyy/src/components/SocialMediaLinks.module.css b/apps/vilinskyy/src/components/SocialMediaLinks.module.css
new file mode 100644
index 0000000000000000000000000000000000000000..86a5b109658abecdadc336a60d77cca5cd7c9f3c
--- /dev/null
+++ b/apps/vilinskyy/src/components/SocialMediaLinks.module.css
@@ -0,0 +1,12 @@
+.list {
+  display: flex;
+  gap: 1rem;
+  list-style: none;
+  padding: 0;
+  justify-content: center;
+}
+
+.list a {
+  text-decoration: none;
+  color: #007bff;
+}
diff --git a/apps/vilinskyy/src/components/SocialMediaLinks.tsx b/apps/vilinskyy/src/components/SocialMediaLinks.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..105f1320e6c9c8fef10fb8b2710e8483ac1a7f93
--- /dev/null
+++ b/apps/vilinskyy/src/components/SocialMediaLinks.tsx
@@ -0,0 +1,33 @@
+import styles from './SocialMediaLinks.module.css'
+
+export default function SocialMediaLinks() {
+  return (
+    <ul className={styles.list}>
+      <li>
+        <a href="https://twitter.com" target="_blank" rel="noreferrer">
+          Twitter
+        </a>
+      </li>
+      <li>
+        <a href="https://linkedin.com" target="_blank" rel="noreferrer">
+          LinkedIn
+        </a>
+      </li>
+      <li>
+        <a href="https://instagram.com" target="_blank" rel="noreferrer">
+          Instagram
+        </a>
+      </li>
+      <li>
+        <a href="https://youtube.com" target="_blank" rel="noreferrer">
+          YouTube
+        </a>
+      </li>
+      <li>
+        <a href="https://bsky.app" target="_blank" rel="noreferrer">
+          Bluesky
+        </a>
+      </li>
+    </ul>
+  )
+}
diff --git a/apps/vilinskyy/src/components/TestimonialSlider.module.css b/apps/vilinskyy/src/components/TestimonialSlider.module.css
new file mode 100644
index 0000000000000000000000000000000000000000..c7d6e58611f0af21375e40393e0ac8a636186d33
--- /dev/null
+++ b/apps/vilinskyy/src/components/TestimonialSlider.module.css
@@ -0,0 +1,16 @@
+.slider {
+  display: flex;
+  flex-direction: column;
+  align-items: center;
+  margin: 2rem 0;
+}
+
+.slide {
+  font-size: 1.2rem;
+  margin-bottom: 1rem;
+  min-height: 2rem;
+}
+
+button {
+  padding: 0.5rem 1rem;
+}
diff --git a/apps/vilinskyy/src/components/TestimonialSlider.tsx b/apps/vilinskyy/src/components/TestimonialSlider.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..8b45417eb160f1d25e3f426258e6f18d081dc894
--- /dev/null
+++ b/apps/vilinskyy/src/components/TestimonialSlider.tsx
@@ -0,0 +1,33 @@
+import { useEffect, useState } from 'react'
+import styles from './TestimonialSlider.module.css'
+
+const testimonials = [
+  { id: 1, text: 'Great collaborator!' },
+  { id: 2, text: 'Highly recommended.' },
+  { id: 3, text: 'Delivered fantastic results.' },
+]
+
+export default function TestimonialSlider() {
+  const [index, setIndex] = useState(0)
+
+  useEffect(() => {
+    const id = setInterval(() => {
+      setIndex((prev) => (prev + 1) % testimonials.length)
+    }, 3000)
+    return () => clearInterval(id)
+  }, [])
+
+  return (
+    <section className={styles.slider}>
+      <div data-testid="testimonial-slide" className={styles.slide}>
+        {testimonials[index].text}
+      </div>
+      <button
+        data-testid="next-testimonial"
+        onClick={() => setIndex((index + 1) % testimonials.length)}
+      >
+        Next
+      </button>
+    </section>
+  )
+}
diff --git a/apps/vilinskyy/src/components/VisualsGalleryPage.module.css b/apps/vilinskyy/src/components/VisualsGalleryPage.module.css
new file mode 100644
index 0000000000000000000000000000000000000000..ad5958c8e318fe0e6b2d45eff2a6e648b7ca4666
--- /dev/null
+++ b/apps/vilinskyy/src/components/VisualsGalleryPage.module.css
@@ -0,0 +1,28 @@
+.grid {
+  display: grid;
+  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
+  gap: 0.5rem;
+  margin-top: 1rem;
+}
+
+a img {
+  width: 100%;
+  cursor: pointer;
+}
+
+.overlay {
+  position: fixed;
+  top: 0;
+  left: 0;
+  width: 100%;
+  height: 100%;
+  background: rgba(0, 0, 0, 0.8);
+  display: flex;
+  align-items: center;
+  justify-content: center;
+}
+
+.overlay img {
+  max-width: 90%;
+  max-height: 90%;
+}
diff --git a/apps/vilinskyy/src/components/VisualsGalleryPage.tsx b/apps/vilinskyy/src/components/VisualsGalleryPage.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..258b48350bfc1ae52b3eb46c7b5c9aa7a2272040
--- /dev/null
+++ b/apps/vilinskyy/src/components/VisualsGalleryPage.tsx
@@ -0,0 +1,31 @@
+import { useState } from 'react'
+import styles from './VisualsGalleryPage.module.css'
+
+const images = ['/placeholder1.png', '/placeholder2.png', '/placeholder3.png']
+
+export default function VisualsGalleryPage() {
+  const [active, setActive] = useState<string | null>(null)
+  return (
+    <div>
+      <div className={styles.grid} data-testid="gallery-grid">
+        {images.map((src, i) => (
+          <img
+            key={i}
+            src={src}
+            alt={`visual ${i}`}
+            onClick={() => setActive(src)}
+          />
+        ))}
+      </div>
+      {active && (
+        <div
+          className={styles.overlay}
+          data-testid="overlay"
+          onClick={() => setActive(null)}
+        >
+          <img src={active} alt="full" />
+        </div>
+      )}
+    </div>
+  )
+}
diff --git a/apps/vilinskyy/src/global.d.ts b/apps/vilinskyy/src/global.d.ts
new file mode 100644
index 0000000000000000000000000000000000000000..6c344ed3813d8821c94262af1b5c6cb3c0983bd4
--- /dev/null
+++ b/apps/vilinskyy/src/global.d.ts
@@ -0,0 +1 @@
+declare module '*.module.css'
diff --git a/apps/vilinskyy/src/index.css b/apps/vilinskyy/src/index.css
new file mode 100644
index 0000000000000000000000000000000000000000..fc26d0a42e5230e2db547f6d17402c502ee1229b
--- /dev/null
+++ b/apps/vilinskyy/src/index.css
@@ -0,0 +1,8 @@
+body {
+  margin: 0;
+  font-family: sans-serif;
+}
+
+nav a {
+  margin-right: 1rem;
+}
diff --git a/apps/vilinskyy/src/main.tsx b/apps/vilinskyy/src/main.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..611e848f1a3e9c12c20ce7bb021b416aa486d5a8
--- /dev/null
+++ b/apps/vilinskyy/src/main.tsx
@@ -0,0 +1,10 @@
+import React from 'react'
+import ReactDOM from 'react-dom/client'
+import App from './App'
+import './index.css'
+
+ReactDOM.createRoot(document.getElementById('root') as HTMLElement).render(
+  <React.StrictMode>
+    <App />
+  </React.StrictMode>
+)
diff --git a/apps/vilinskyy/src/pages/Home.tsx b/apps/vilinskyy/src/pages/Home.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..e6c1390f6d44d6036b638fea435e72702ec7a100
--- /dev/null
+++ b/apps/vilinskyy/src/pages/Home.tsx
@@ -0,0 +1,21 @@
+import HeroSectionVideoIntro from '../components/HeroSectionVideoIntro'
+import DetailedProjectListings from '../components/DetailedProjectListings'
+import TestimonialSlider from '../components/TestimonialSlider'
+import NewsletterForm from '../components/NewsletterForm'
+import MultiColumnLayout from '../components/MultiColumnLayout'
+import SocialMediaLinks from '../components/SocialMediaLinks'
+
+const longText = `Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed non risus. Suspendisse lectus tortor, dignissim sit amet, adipiscing nec, ultricies sed, dolor.`
+
+export default function Home() {
+  return (
+    <div>
+      <HeroSectionVideoIntro />
+      <MultiColumnLayout text={longText} />
+      <DetailedProjectListings />
+      <TestimonialSlider />
+      <NewsletterForm />
+      <SocialMediaLinks />
+    </div>
+  )
+}
diff --git a/apps/vilinskyy/src/pages/LoomRoast.tsx b/apps/vilinskyy/src/pages/LoomRoast.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..e0def9b24a5ba0e2a1ca408bc471ad660d30bc00
--- /dev/null
+++ b/apps/vilinskyy/src/pages/LoomRoast.tsx
@@ -0,0 +1,9 @@
+import LoomRoastPage from '../components/LoomRoastPage'
+
+export default function LoomRoast() {
+  return (
+    <div>
+      <LoomRoastPage />
+    </div>
+  )
+}
diff --git a/apps/vilinskyy/src/pages/Networking.tsx b/apps/vilinskyy/src/pages/Networking.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..ab51ec75dc6f7a0e9c01293335a2924fd1144dfd
--- /dev/null
+++ b/apps/vilinskyy/src/pages/Networking.tsx
@@ -0,0 +1,9 @@
+import NetworkingCoursePage from '../components/NetworkingCoursePage'
+
+export default function Networking() {
+  return (
+    <div>
+      <NetworkingCoursePage />
+    </div>
+  )
+}
diff --git a/apps/vilinskyy/src/pages/Visuals.tsx b/apps/vilinskyy/src/pages/Visuals.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..4dd6329d766eec04eb0dba9792d7c7f10123b1ea
--- /dev/null
+++ b/apps/vilinskyy/src/pages/Visuals.tsx
@@ -0,0 +1,10 @@
+import VisualsGalleryPage from '../components/VisualsGalleryPage'
+
+export default function Visuals() {
+  return (
+    <div>
+      <h2>Visuals Gallery</h2>
+      <VisualsGalleryPage />
+    </div>
+  )
+}
diff --git a/apps/vilinskyy/tsconfig.json b/apps/vilinskyy/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..dda3da740fc0a08cae1d529ad99368bcc09df15c
--- /dev/null
+++ b/apps/vilinskyy/tsconfig.json
@@ -0,0 +1,9 @@
+{
+  "extends": "../../tsconfig.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "jsxImportSource": "react"
+  },
+  "include": ["src"],
+  "references": [{ "path": "./tsconfig.node.json" }]
+}
diff --git a/apps/vilinskyy/tsconfig.node.json b/apps/vilinskyy/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..49c930224ea39dccbc2005edce34025697235ec5
--- /dev/null
+++ b/apps/vilinskyy/tsconfig.node.json
@@ -0,0 +1,10 @@
+{
+  "extends": "./tsconfig.json",
+  "compilerOptions": {
+    "composite": true,
+    "module": "ESNext",
+    "moduleResolution": "bundler",
+    "allowJs": true
+  },
+  "include": ["vite.config.ts"]
+}
diff --git a/apps/vilinskyy/vite.config.ts b/apps/vilinskyy/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..fa0a14837f72ac8538bfa63dd7f9fbd26e0d869c
--- /dev/null
+++ b/apps/vilinskyy/vite.config.ts
@@ -0,0 +1,10 @@
+import { defineConfig } from 'vite'
+import react from '@vitejs/plugin-react'
+
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5174,
+    host: true,
+  },
+})
diff --git a/e2e/vilinskyy.spec.ts b/e2e/vilinskyy.spec.ts
new file mode 100644
index 0000000000000000000000000000000000000000..43f16e15c225f20380194a5f5acd0467533c1264
--- /dev/null
+++ b/e2e/vilinskyy.spec.ts
@@ -0,0 +1,64 @@
+import { test, expect } from '@playwright/test'
+
+const base = '/'
+
+test.describe('Vilinskyy Portfolio', () => {
+  test.beforeEach(async ({ page }) => {
+    await page.goto(base)
+  })
+
+  test('hero video is visible', async ({ page }) => {
+    const iframe = page.locator('iframe[title="Intro Video"]')
+    await expect(iframe).toBeVisible()
+  })
+
+  test('project sections expand', async ({ page }) => {
+    const button = page.locator('[data-testid="read-more"]').first()
+    await button.click()
+    await expect(button).toHaveAttribute('aria-expanded', 'true')
+    await expect(page.locator('[data-testid="project-detail"]')).toBeVisible()
+  })
+
+  test('testimonial slider cycles to next', async ({ page }) => {
+    const slide = page.locator('[data-testid="testimonial-slide"]')
+    const initial = await slide.textContent()
+    await page.locator('[data-testid="next-testimonial"]').click()
+    await expect(slide).not.toHaveText(initial!)
+  })
+
+  test('newsletter form accepts email', async ({ page }) => {
+    await page.fill('input[type="email"]', 'test@example.com')
+    await page.click('button[type="submit"]')
+    await expect(page.locator('text=Thank you for subscribing!')).toBeVisible()
+  })
+
+  test('gallery opens overlay', async ({ page }) => {
+    await page.click('text=Visuals')
+    await page.click('img[alt="visual 0"]')
+    await expect(page.locator('[data-testid="overlay"] img')).toBeVisible()
+  })
+
+  test('networking page shows price', async ({ page }) => {
+    await page.click('text=Networking 2024')
+    await expect(page.locator('text=$199')).toBeVisible()
+  })
+
+  test('loom roast form submits', async ({ page }) => {
+    await page.click('text=Loom Roast')
+    await page.fill('input[placeholder="Project URL"]', 'http://example.com')
+    await page.click('button:has-text("Submit")')
+    await expect(page.locator('text=Submitted!')).toBeVisible()
+  })
+
+  test('multi column layout has 2 columns on desktop', async ({ page }) => {
+    const columns = await page
+      .locator('[data-testid="multi-column"]')
+      .evaluate((el) => getComputedStyle(el).columnCount)
+    expect(Number(columns)).toBe(2)
+  })
+
+  test('social links render', async ({ page }) => {
+    const links = page.locator('ul li a')
+    await expect(links.nth(0)).toHaveAttribute('href', 'https://twitter.com')
+  })
+})
diff --git a/package.json b/package.json
index 998abe062fd93da15b22a15b8e7c9092ebef7276..0adc5b860a6454aad0663eb4f54301e653bef2c6 100644
--- a/package.json
+++ b/package.json
@@ -1,45 +1,46 @@
 {
   "name": "portfolio",
   "version": "1.0.0",
   "type": "module",
   "private": true,
   "description": "Production-grade modular frontend monorepo for elite portfolio sites",
   "author": "RyleeB",
   "license": "MIT",
   "engines": {
     "node": ">=20.17.0 <21.0.0",
     "pnpm": ">=9.12.0 <10.0.0"
   },
   "packageManager": "pnpm@9.12.0",
   "volta": {
     "node": "20.17.0",
     "pnpm": "9.12.0"
   },
   "scripts": {
     "dev": "turbo run dev",
     "dev:robin": "turbo run dev --filter=robin-noguier",
+    "dev:vilinskyy": "turbo run dev --filter=vilinskyy",
     "build": "turbo run build",
     "test": "turbo run test",
     "test:e2e": "turbo run test:e2e",
     "test:unit": "turbo run test:unit",
     "lint": "turbo run lint",
     "format": "prettier --write \"**/*.{ts,tsx,js,jsx,json,css,md}\"",
     "format:check": "prettier --check \"**/*.{ts,tsx,js,jsx,json,css,md}\"",
     "clean": "turbo run clean && rm -rf node_modules",
     "typecheck": "turbo run typecheck",
     "prepare": "husky",
     "preinstall": "npx only-allow pnpm"
   },
   "dependencies": {
     "react": "18.2.0",
     "react-dom": "18.2.0",
     "three": "0.162.0",
     "@react-three/fiber": "8.15.19",
     "@react-three/drei": "9.99.0",
     "gsap": "3.12.5",
     "framer-motion": "11.0.24",
     "lenis": "1.3.4",
     "lodash": "4.17.21",
     "papaparse": "5.4.1"
   },
   "devDependencies": {
diff --git a/playwright.config.ts b/playwright.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..ca1b9eacceb823ddbcfd524940d821f8971870ed
--- /dev/null
+++ b/playwright.config.ts
@@ -0,0 +1,25 @@
+import { defineConfig, devices } from '@playwright/test'
+
+export default defineConfig({
+  testDir: './e2e',
+  fullyParallel: true,
+  forbidOnly: !!process.env.CI,
+  retries: process.env.CI ? 2 : 0,
+  workers: process.env.CI ? 1 : undefined,
+  reporter: [
+    ['html', { outputFolder: 'playwright-report' }],
+    ['json', { outputFile: 'test-results.json' }],
+  ],
+  use: {
+    baseURL: 'http://localhost:5174',
+    trace: 'on-first-retry',
+    screenshot: 'only-on-failure',
+    video: 'retain-on-failure',
+  },
+  projects: [{ name: 'chromium', use: { ...devices['Desktop Chrome'] } }],
+  webServer: {
+    command: 'pnpm dev:vilinskyy',
+    port: 5174,
+    reuseExistingServer: !process.env.CI,
+  },
+})
diff --git a/tsconfig.json b/tsconfig.json
index 5e736a98230c67bd221c5b6fd989f5e37946e2cd..7002e44ac4d344332294e6f780137d81deba66c2 100644
--- a/tsconfig.json
+++ b/tsconfig.json
@@ -1,15 +1,18 @@
 {
   "compilerOptions": {
     "composite": true,
     "strict": true,
     "target": "ES2022",
     "module": "ESNext",
     "moduleResolution": "bundler",
     "jsx": "react-jsx",
     "lib": ["ES2022", "DOM", "DOM.Iterable"],
     "skipLibCheck": true,
     "esModuleInterop": true,
     "resolveJsonModule": true
   },
-  "references": [{ "path": "./apps/robin-noguier" }]
+  "references": [
+    { "path": "./apps/robin-noguier" },
+    { "path": "./apps/vilinskyy" }
+  ]
 }
